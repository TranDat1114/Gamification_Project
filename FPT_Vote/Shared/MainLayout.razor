@inherits LayoutComponentBase

@inject IJSRuntime _js;
@inject JsInterpop _jsInterpop;

@inject AuthenticationStateProvider _auth
@inject NavigationManager _navigationManager


<PageTitle>FPT_Vote</PageTitle>

<div class="w-full h-full relative overflow-x-hidden">
    <div class="left-0 right-0 h-16 top-0 bg-[#242424] sticky  shadow-lg">
        <div class="container m-auto h-full w-full flex flex-shrink-0 justify-between px-5 items-center">
            <NavLink href="/" class="text-white font-['Quicksand']">Gamification</NavLink>
            <button @onclick="ToggleNavMenu">
                <div class="text-white">
                    <i class="w-8 h-8" data-lucide="align-justify"></i>
                </div>
            </button>
        </div>
    </div>
    <div class="container m-auto my-8">
        <div class="min-h-screen">
            @Body
        </div>
    </div>
    <div>
        <div class="bg-[#242424] h-16">
            <div class="container m-auto h-full w-full flex  justify-center px-5 items-center">
                <div class="text-white font-['Quicksand']">Jay Andy - 2023</div>
            </div>
        </div>
    </div>

</div>

<div
    class='fixed z-50 shadow-xl transition ease-in-out inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm bg-white @(!isNavMenuCollapsed ?"block":"hidden")'>
    <!-- Your sheet content goes here -->
    <div class="h-16 w-full ">
        <div class="justify-between items-center mx-5 h-full w-full flex">
            <button @onclick="ToggleNavMenu">
                <div class="">
                    <i class="w-8 h-8" data-lucide="x"></i>
                </div>
            </button>
        </div>
        <div class="grid grid-flow-row gap-2 w-full mx">
            <NavLink href="/" class="hover:bg-[#f5f5f5] rounded-lg w-full py-2" @onclick="ToggleNavMenu">
                <div class="flex items-center px-8  ">
                    <i class="w-8 h-8" data-lucide="home"></i>
                    <p class="font-bold font-['Quicksand'] px-8">Home</p>
                </div>
            </NavLink>
            <AuthorizeView>
                <NotAuthorized>
                    <NavLink href="/login" class="hover:bg-[#f5f5f5] rounded-lg w-full py-2" @onclick="ToggleNavMenu">
                        <div class="flex items-center px-8 ">
                            <i class="w-8 h-8" data-lucide="user-circle-2"></i>
                            <p class="font-bold font-['Quicksand'] px-8">Login</p>
                        </div>
                    </NavLink>

                </NotAuthorized>
                <Authorized>
                    <NavLink href="/import" class="hover:bg-[#f5f5f5] rounded-lg w-full py-2" @onclick="ToggleNavMenu">
                        <div class="flex items-center px-8  ">
                            <i class="w-8 h-8" data-lucide="file-up"></i>
                            <p class="font-bold font-['Quicksand'] px-8">Import</p>
                        </div>
                    </NavLink>
                    <button class="hover:bg-[#f5f5f5] rounded-lg w-full py-2" @onclick="LogOut">
                        <div class="flex items-center px-8  ">
                            <i class="w-8 h-8" data-lucide="log-out"></i>
                            <p class="font-bold font-['Quicksand'] px-8">Log out</p>
                        </div>
                    </button>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</div>

<script src="https://unpkg.com/lucide@latest"></script>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _jsInterpop.LucideCreate(_js);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private bool isNavMenuCollapsed = true;
    private async Task ToggleNavMenu()
    {
        isNavMenuCollapsed = !isNavMenuCollapsed;
        await _jsInterpop.LucideCreate(_js);

    }

    private async Task LogOut()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)_auth;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        isNavMenuCollapsed = !isNavMenuCollapsed;
        _navigationManager.NavigateTo("/");

    }
}